
const lazyImages=document.getElementsByClassName("lazy");function Xor(e){this.key=e}function LinkCoder(e){this.coder=e}document.addEventListener("DOMContentLoaded",(()=>{[...lazyImages].forEach((e=>{const t=e.dataset.src;e.setAttribute("src",t),e.removeAttribute("data-src")}))}),!1),document.addEventListener("DOMContentLoaded",(function(){const e=new LinkCoder(new Xor(99));Nodes.decode(".xorencoded",e)})),Xor.prototype.encode=function(e){let t="";for(let o=0;o<e.length;++o){const n=e.charCodeAt(o)^this.key;t+=this.fromHex(n)}return t},Xor.prototype.decode=function(e){let t="";for(let o=0;o<e.length;o+=2){const n=this.toHex(e,o)^this.key;t+=String.fromCharCode(n)}return t},Xor.prototype.fromHex=function(e){let t=e.toString(16);return e<16&&(t="0"+t),t},Xor.prototype.toHex=function(e,t){const o=e.substr(t,2);return parseInt(o,16)},LinkCoder.prototype.encode=function(e){this.apply("encode",e)},LinkCoder.prototype.decode=function(e){this.apply("decode",e)},LinkCoder.prototype.apply=function(e,t){const o=t.getAttribute("href"),n=this.coder[e](o);t.setAttribute("href",n)},Nodes={},Nodes.decode=function(e,t){const o=document.querySelectorAll(e),n=t.decode.bind(t);o.forEach(n)},"object"==typeof module&&(module.exports=Xor);